set -g default-terminal "screen-256color"
set -g status-utf8 on

set -g bell-action none

# # Default global window options.
setw -g remain-on-exit off
set-option -g mouse-select-pane on
# #setw -g xterm-keys on
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

set-option -g default-command "reattach-to-user-namespace -l bash"

# force reload conf
unbind r
bind r source-file ~/.tmux.conf

# # Keys to switch session.
# bind Q switchc -t0
# bind W switchc -t1
# bind E switchc -t2

# # Other key bindings.
bind F1 selectw -t:0
bind F2 selectw -t:1
bind F3 selectw -t:2
bind F4 selectw -t:3
bind F5 selectw -t:4
bind F6 selectw -t:5
bind F7 selectw -t:6
bind F8 selectw -t:7
bind F9 selectw -t:8


# Statusbar
set -g status-interval 10
set -g status-left-length 40
# set -g status-left '#[bg=cyan,bright] #[fg=black]#H #[fg=black]• [%m-%d-%Y] %I:%M  #[fg=cyan,bright,bg=black]⮀df'
set -g status-left '#[bg=cyan,bright,fg=black] #H #[fg=cyan,bright,bg=black]⮀'
set -g status-right '#[fg=green,bg=black]⮂#[fg=black,bg=green] #(date "+%D %I:%M %p") #(sensors -A | grep -i "cpu temp" | cut -f 7 -d " "),#(nvidia-smi -a | grep Gpu | grep C | cut -c34-36)°C '

#FIXME: I want to be able to use: ⮁
setw -g window-status-current-format '#[fg=black,bg=green]⮀ #W #[fg=green,bg=black]⮀'

set -g status-bg black
set -g status-fg white
set -g status-attr bright
setw -g window-status-current-bg white
setw -g window-status-current-fg white

set-window-option -g window-status-attr dim

# set -g message-fg cyan
# set -g message-bg black
# set -g message-attr bright

# monitor activity in other windows
setw -g monitor-activity on
set -g visual-activity off

# highlight active window
setw -g window-status-current-attr bold

## END colors

bind-key C-r source $HOME/.tmux.conf

setw -g automatic-rename

bind-key C-a last-window
bind-key C-d detach-client

bind-key C-c new-window
bind-key C-p previous-window
bind-key C-n next-window
# bind-key ' ' next-window
# bind-key C-' ' next-window

unbind C-o
bind-key C-i set-window-option synchronize-panes on
bind-key C-o set-window-option synchronize-panes off

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with j and k, a bit like vim
# as of tmux 1.1, there is no way to move based on pane position (ie, no way to
# move the pane to the right)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi
unbind V
bind V paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# # screen ^C c
unbind ^C
bind ^C new-window

# detach ^D d
unbind ^D
bind ^D detach

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind ^d
bind ^d confirm-before "kill-window"

setw -g aggressive-resize on
